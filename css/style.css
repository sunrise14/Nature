*,
*::after,
*::before {
  padding: 0;
  margin: 0;
  box-sizing: inherit; }

html {
  font-size: 10px; }

body {
  box-sizing: border-box; }

@keyframes moveInLeft {
  0% {
    opacity: 0;
    transform: translateX(-100px); }
  80% {
    transform: translateX(20px); }
  100% {
    opacity: 1;
    transform: translateX(0px); } }

@keyframes moveInRight {
  0% {
    opacity: 0;
    transform: translateX(100px); }
  80% {
    transform: translateX(-20px); }
  100% {
    opacity: 1;
    transform: translateX(0px); } }

@keyframes moveInBottom {
  0% {
    opacity: 0;
    transform: translateY(30px); }
  100% {
    opacity: 1;
    transform: translateY(0px); } }

.heading-primary {
  color: #fff;
  text-transform: uppercase;
  backface-visibility: hidden;
  margin-bottom: 6rem; }
  .heading-primary--main {
    font-size: 6.5rem;
    font-weight: 40rem;
    letter-spacing: 1.7rem;
    display: block;
    animation-name: moveInLeft;
    animation-duration: 1s;
    animation-timing-function: ease-in; }
  .heading-primary--sub {
    display: block;
    letter-spacing: 1.2rem;
    font-size: 1.6rem;
    animation-name: moveInRight;
    animation-duration: 1s;
    animation-timing-function: ease-in; }

body {
  font-family: "Lato", sans-serif;
  font-weight: 400;
  line-height: 1.7;
  /* distance between 2 lines, 100-110% is the default line height. */
  color: #777;
  padding: 3rem; }

.btn:link, .btn:visited {
  text-transform: uppercase;
  text-decoration: none;
  padding: 1.5rem 4rem;
  position: relative;
  display: inline-block;
  text-align: center;
  transition: all 0.2s;
  /* transform is one that comes under it.Annother way to implement animations is to use keyframes.If we specify 'all' then all prop will be animated */ }

.btn:hover {
  transform: translateY(-3px);
  /* negative makes it move up along Y axis by 3px  */
  box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.2); }
  .btn:hover::after {
    transform: scaleX(1.4) scaleY(1.6);
    opacity: 0; }

.btn:active {
  transform: translate(-1px);
  box-shadow: 0 1rem 1rem rgba(0, 0, 0, 0.2); }

.btn-white {
  background: #fff;
  color: #777;
  border-radius: 10rem;
  text-align: center; }
  .btn-white::after {
    background-color: white; }

.btn::after {
  content: "";
  /* not exactly sure, but he said that this should be there */
  display: inline-block;
  height: 100%;
  /* sets sizes to 100% of original buttons height and width */
  width: 100%;
  border-radius: 10rem;
  position: absolute;
  top: 0;
  left: 0;
  z-index: -1;
  transition: all 0.4s; }

.btn-animated {
  animation: moveInBottom .5s ease-out .75s;
  animation-fill-mode: backwards; }

.header {
  height: 95vh;
  background-image: linear-gradient(to bottom right, rgba(126, 213, 111, 0.411), rgba(40, 180, 133, 0.507)), url(../img/hero.jpg);
  background-size: cover;
  /* always fits the element inside the box irrespective of viewport width*/
  background-position: top;
  /*crops the bottom part of image to set viewport but doesn't crop the top */
  clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);
  position: relative; }
  .header__logo-box {
    position: absolute;
    top: 4rem;
    left: 4rem; }
  .header__logo {
    height: 3.5rem; }
  .header__img {
    height: 45px; }
  .header__text-box {
    position: absolute;
    top: 40%;
    left: 50%;
    transform: translate(-50%, -50%);
    text-align: center; }

.row {
  max-width: 114rem;
  background-color: #eee;
  margin: 0 auto; }
  .row:not(:last-child) {
    margin-bottom: 8rem; }
  .row::after {
    content: "";
    display: table; }
  .row [class^="col-"] {
    background-color: orangered;
    float: left; }
    .row [class^="col-"]:not(:last-child) {
      margin-right: 6rem; }
  .row .col-1-of-2 {
    width: calc((100% - 6rem)/2); }
  .row .col-1-of-3 {
    width: calc((100% - 2 * 6rem)/3); }
  .row .col-1-of-4 {
    width: calc((100% - 3 * 6rem)/4); }
  .row .col-2-of-3 {
    width: calc(2*((100% - 2 * 6rem)/3) + 6rem); }
  .row .col-2-of-4 {
    width: calc(2*(100% - 6rem)/4); }
  .row .col-3-of-4 {
    width: calc(2*((100% - 6rem)/3)); }
